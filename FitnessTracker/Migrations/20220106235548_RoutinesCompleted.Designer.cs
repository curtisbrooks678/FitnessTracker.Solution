// <auto-generated />
using System;
using FitnessTracker.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FitnessTracker.Migrations
{
    [DbContext(typeof(FitnessTrackerContext))]
    [Migration("20220106235548_RoutinesCompleted")]
    partial class RoutinesCompleted
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("FitnessTracker.Models.Gym", b =>
                {
                    b.Property<int>("GymId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("GymId");

                    b.ToTable("Gyms");
                });

            modelBuilder.Entity("FitnessTracker.Models.Member", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("GymId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("RoutinesCompleted")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("MemberId");

                    b.HasIndex("GymId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("FitnessTracker.Models.MemberRoutine", b =>
                {
                    b.Property<int>("MemberRoutineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Complete")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("RoutineId")
                        .HasColumnType("int");

                    b.HasKey("MemberRoutineId");

                    b.HasIndex("MemberId");

                    b.HasIndex("RoutineId");

                    b.ToTable("MemberRoutine");
                });

            modelBuilder.Entity("FitnessTracker.Models.Routine", b =>
                {
                    b.Property<int>("RoutineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("GymId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("RoutineDescription")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("RoutineId");

                    b.HasIndex("GymId");

                    b.ToTable("Routines");
                });

            modelBuilder.Entity("FitnessTracker.Models.Member", b =>
                {
                    b.HasOne("FitnessTracker.Models.Gym", "Gym")
                        .WithMany("Members")
                        .HasForeignKey("GymId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gym");
                });

            modelBuilder.Entity("FitnessTracker.Models.MemberRoutine", b =>
                {
                    b.HasOne("FitnessTracker.Models.Member", "Member")
                        .WithMany("JoinEntities")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitnessTracker.Models.Routine", "Routine")
                        .WithMany("JoinEntities")
                        .HasForeignKey("RoutineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Routine");
                });

            modelBuilder.Entity("FitnessTracker.Models.Routine", b =>
                {
                    b.HasOne("FitnessTracker.Models.Gym", "Gym")
                        .WithMany("Routines")
                        .HasForeignKey("GymId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gym");
                });

            modelBuilder.Entity("FitnessTracker.Models.Gym", b =>
                {
                    b.Navigation("Members");

                    b.Navigation("Routines");
                });

            modelBuilder.Entity("FitnessTracker.Models.Member", b =>
                {
                    b.Navigation("JoinEntities");
                });

            modelBuilder.Entity("FitnessTracker.Models.Routine", b =>
                {
                    b.Navigation("JoinEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
